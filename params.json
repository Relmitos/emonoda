{"name":"Emonoda","tagline":"Набор программ для организации и управления коллекцией торрентов","body":"![Chi](https://raw.githubusercontent.com/wiki/mdevaev/emonoda/chi.png) Emonoda -- 得物だ\r\n=======\r\n\r\n**Emonoda** (moon. _得物だ_, рус. _это добыча_) -- набор программ для организации и управления коллекцией торрентов. Он поможет вам следить за актуальностью раздач и автоматически обновлять торрент-файлы, а так же вычищать старые данные, просматривать мета-информацию и делать множество других вещей.  \r\nЗа детальной информацией обращайтесь на вики: https://github.com/mdevaev/emonoda/wiki  \r\n\r\n### Из коробки\r\n* `emfetch` -- Следит за раздачами, используя плагины для популярных трекеров; обновляет торрент-файлы при добавлении новых серий или перезаливке; интегрируется с основными линуксовыми клиентами.\r\n* `emfile` -- Позволяет читать метаданные торрент-файлов и выдает их в человекочитаемом, либо удобном для скриптов формате.\r\n* `emdiff` -- Показывает разницу содержимого двух торрент-файлов в виде диффа.\r\n* `emfind` -- Служит для выполнения различных поисковых запросов, например - найти в каталоге с данными файлы, не принадлежащими ни одному торренту, зарегистрированному в клиенте.\r\n* `emload` -- Загружает торрент, используя модель \"t.data\" для хранения данных (см. документацию).\r\n* `emrm` -- Удаляет торрент из клиента.\r\n\r\n### Основные фичи\r\n* UNIX-way -- система представлена в виде простых консольных программ с текстовыми конфигами. Не нужно разворачивать оракл, апач и кластер эллиптикса - просто поставьте `emonoda` и укажите в ее конфиге несколько несложных параметров.\r\n* Python -- можно очень просто добавить поддержку других трекеров, используя готовый набор классов и функций.\r\n* Интегрируемость - программы стараются по-максимуму использовать все возможности торрент-клиентов. Например, `emfile` способна найти каталог, куда вы загружали указанный торрент, а `emfetch`, при обновлении торрент-файла, может сохранить его метку, назначенную в [ruTorrent](https://github.com/Novik/ruTorrent).\r\n* Индивидуальная настройка HTTP/Socks4/Socks5-прокси для каждого трекера -- если в вашей сети недоступен любимый ресурс, вы можете сконфигурировать для него прокси отдельно от остальных трекеров.\r\n* Фингерпринты -- перед тем, как логиниться на трекер, программа проверит содержимое сайта и сообщит вам, если вместо него вдруг показывается провайдерская заглушка.\r\n\r\n### Поддерживаемые трекеры\r\n* http://rutracker.org\r\n* http://nnm-club.me\r\n* http://rutor.org\r\n* http://tfile.me\r\n* http://pravtor.ru\r\n* http://tr.anidub.com\r\n* http://tabun.everypony.ru\r\n* http://pornolab.net\r\n\r\n### Поддерживаемые клиенты\r\n* [RTorrent](http://rakshasa.github.io/rtorrent/)\r\n* [KTorrent](http://ktorrent.pwsp.net/)\r\n* [Transmission](http://www.transmissionbt.com/)\r\n\r\n### Установка\r\n##### Локальная установка из PyPI\r\nВы можете поставить `emonoda` в свой домашний каталог из [PyPI](https://pypi.python.org/pypi/emonoda), при этом программы будут доступны в `~/.local/bin`, например - `~/.local/bin/emfetch`. Для установки введите:\r\n```\r\npip install --user --upgrade emonoda\r\n```\r\n##### Пакет для Arch Linux\r\nАктуальный PKGBUILD находится в [AUR`е](https://aur4.archlinux.org/packages/emonoda/):\r\n```\r\npacker -S emonoda\r\n```\r\n\r\n### Скриншотик\r\n![emfetch](https://raw.githubusercontent.com/wiki/mdevaev/emonoda/emfetch.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}